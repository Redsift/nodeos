defaults:
  steps:
    - set_environment: &set_environment
        name: Set environment variables
        command: |
          echo "export CONTAINER_NAME=\"quay.io/redsift/nodeos\"" >> $BASH_ENV
          echo "export BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $BASH_ENV
          echo "export COMMIT_SHA1=\"${CIRCLE_SHA1:0:7}\"" >> $BASH_ENV
          echo "export VERSION=\"${CIRCLE_TAG:=$CIRCLE_BRANCH}-${CIRCLE_SHA1:0:7}\"" >> $BASH_ENV
          echo "export BRANCH=\"${CIRCLE_BRANCH/-/ }\"" >> $BASH_ENV
    - log_in_to_quay: &log_in_to_quay
        name: Log in to quay.io
        command: |
          echo $QUAY_PASS | docker login --username $QUAY_USER --password-stdin quay.io
version: 2

jobs:
  container:
    docker:
      - image: docker:18.09.0
    steps: 
      - checkout
      - setup_remote_docker
      - run: *set_environment
      - run: *log_in_to_quay
      - run:
          name: Build container
          command: |
            test -z $BASH && source ${BASH_ENV}
            suffix="beta"
            echo "Configuring FROM in Dockerfile with ${suffix}"
            if [[ "$BRANCH" == "release" ]]; then
              suffix="latest"
            fi
            sed "s/FROM quay\.io\/redsift\/baseos/&:${suffix}/" < Dockerfile > Dockerfile.versioned
            docker build -t ${CONTAINER_NAME}:${COMMIT_SHA1} -f Dockerfile \
              --build-arg BUILD_DATE=${BUILD_DATE} \
              --build-arg COMMIT_SHA1=${COMMIT_SHA1} \
              --build-arg VERSION=${VERSION} Dockerfile.versioned
      - run:
          name: Test container
          command: |
            test -z $BASH && source ${BASH_ENV}
            echo "node -v" | docker run -i --entrypoint /bin/bash ${CONTAINER_NAME}
            echo "npm -v" | docker run -i --entrypoint /bin/bash ${CONTAINER_NAME}
      - run:
          name: Push Docker images to a registry
          command: |
            test -z $BASH && source ${BASH_ENV}
            imageName=${CONTAINER_NAME}:${COMMIT_SHA1}
            suffix="beta"
            echo "Tagging as $CONTAINER_NAME:${suffix}"
            if [[ "$BRANCH" == "release" ]]; then
              docker tag $imageName $CONTAINER_NAME:${suffix}
            fi
            # docker push ${CONTAINER_NAME} > /dev/null

workflows:
  version: 2
  build:
    jobs:
      - container:
          filters:
            branches:
              only: master
          context: org-global